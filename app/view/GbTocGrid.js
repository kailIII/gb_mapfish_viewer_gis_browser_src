/*
 * File: app/view/GbTocGrid.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Gb41.view.GbTocGrid', {
	extend: 'Ext.grid.Panel',
	alias: 'widget.gbtocgrid',

	height: 250,
	width: 400,
	autoScroll: true,
	title: 'My Grid Panel',
	store: 'WmsLayers',

	initComponent: function () {
		var me = this;

		Ext.applyIf(me, {
			viewConfig: {

			},
			columns: [
				{
					xtype: 'numbercolumn',
					dataIndex: 'id',
					text: 'Id'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'layername',
					text: 'Layername'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'topic',
					text: 'Topic'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'goupname',
					text: 'Goupname'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'toclayertitle',
					text: 'Toclayertitle'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'tocsort',
					text: 'tocsort'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'leglayertitle',
					text: 'Leglayertitle'
				},
				{
					xtype: 'booleancolumn',
					dataIndex: 'showscale',
					text: 'Showscale'
				},
				{
					xtype: 'numbercolumn',
					dataIndex: 'minscale',
					text: 'Minscale'
				},
				{
					xtype: 'numbercolumn',
					dataIndex: 'maxscale',
					text: 'Maxscale'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'docurl',
					text: 'Docurl'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'legendhtml',
					text: 'Legendhtml'
				},
				{
					xtype: 'booleancolumn',
					dataIndex: 'wms',
					text: 'Wms'
				},
				// {
				// 	xtype: 'numbercolumn',
				// 	dataIndex: 'wms_sort',
				// 	text: 'Wms_sort'
				// },
				{
					xtype: 'booleancolumn',
					dataIndex: 'visini',
					text: 'Visini'
				},
				{
					xtype: 'booleancolumn',
					dataIndex: 'visuser',
					text: 'Visuser'
				},
				{
					xtype: 'booleancolumn',
					dataIndex: 'showtoc',
					text: 'Showtoc'
				}
			]
		});

		me.callParent(arguments);
	}

});